@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}
<div class="d-flex justify-content-center">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h3>Create a new account.</h3>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.FirstName"></label>
                <input asp-for="Input.FirstName" class="form-control" autocomplete="username" aria-required="true" />
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.LastName"></label>
                <input asp-for="Input.LastName" class="form-control" autocomplete="username" aria-required="true" />
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.UserRole"></label>
                <select asp-for="Input.UserRole" class="form-control"  asp-items='new SelectList(ViewBag.roles,"Id","Name")' autocomplete="new-password" aria-required="true" / >
                </select>
                <span asp-validation-for="Input.UserRole" class="text-danger"></span>
            </div>
            <br>
             <div id="example3" data-callback="recaptchaCallback"></div>
             @* <div class="g-recaptcha" data-callback="recaptchaCallback" data-sitekey="6Le8mbwmAAAAABc3pM_DjSs0aiIRvLgzdqWAOJLD"></div>*@
            <br>
            <input type="hidden" id="hfCaptcha"/>
            <span id="rfvCaptcha" class="error" style="display:none">Captcha validation is required.</span>
            <br/>
            <button id="registerSubmit" type="button" class="w-100 btn btn-lg btn-success mt-2"  disabled>Register</button>
        </form>
        <!-- POSTs back to the page's URL upon submit with a g-recaptcha-response POST parameter. -->
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
       
      function recaptchacallback(response) {
         $('#registerSubmit').removeAttr('disabled');
         $('#registerSubmit').click(function(){
             $.ajax({
                type: 'GET',
                url: "/Home/Verifyforsignup?token=" + response,
                success:function(data){
                    document.getElementById("registerForm").submit();
                }
            });
        });
      };
         
      var onloadCallback = function() {
        // renders the html element with id 'example1' as a recaptcha widget.
        // the id of the recaptcha widget is assigned to 'widgetid1'.
        grecaptcha.render('example3', {
          'sitekey' : '6Le8mbwmAAAAABc3pM_DjSs0aiIRvLgzdqWAOJLD',
          'callback' : verifyCallback,
        });
      };
      var verifyCallback = function(response) {
        recaptchacallback(response);
      };
    </script>
  <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit"
        async defer>
    </script>
    
}
